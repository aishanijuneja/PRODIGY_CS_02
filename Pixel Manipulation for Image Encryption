from PIL import Image

def encrypt_image(image_path, key):
    image = Image.open(image_path)
    encrypted_image = Image.new(image.mode, image.size)

    width, height = image.size

    for x in range(width):
        for y in range(height):
            pixel = image.getpixel((x, y))
            encrypted_pixel = tuple(p ^ key for p in pixel)  # XOR operation with the key
            encrypted_image.putpixel((x, y), encrypted_pixel)

    encrypted_image.save("encrypted_image.png")
    print("Image encrypted successfully.")

def decrypt_image(encrypted_image_path, key):
    encrypted_image = Image.open(encrypted_image_path)
    decrypted_image = Image.new(encrypted_image.mode, encrypted_image.size)

    width, height = encrypted_image.size

    for x in range(width):
        for y in range(height):
            pixel = encrypted_image.getpixel((x, y))
            decrypted_pixel = tuple(p ^ key for p in pixel)  # XOR operation with the key
            decrypted_image.putpixel((x, y), decrypted_pixel)

    decrypted_image.show()
    print("Image decrypted successfully.")

def main():
    choice = input("Enter 'e' for encryption or 'd' for decryption: ").lower()
    if choice == 'e':
        image_path = input("Enter the path to the image to encrypt: ")
        key = int(input("Enter the encryption key (integer): "))
        encrypt_image(image_path, key)
    elif choice == 'd':
        encrypted_image_path = input("Enter the path to the encrypted image: ")
        key = int(input("Enter the decryption key (integer): "))
        decrypt_image(encrypted_image_path, key)
    else:
        print("Invalid choice. Please enter 'e' or 'd'.")

if __name__ == "__main__":
    main()
